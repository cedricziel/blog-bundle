# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    CedricZiel\BlogBundle\:
        resource: '../../*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    CedricZiel\BlogBundle\Controller\:
        resource: '../../Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    CedricZiel\BlogBundle\Controller\PostController:
        tags: ['controller.service_arguments', 'knp_paginator.injectable']

    CedricZiel\BlogBundle\Repository\PostRepository:
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - CedricZiel\BlogBundle\Entity\Post

    CedricZiel\BlogBundle\Twig\Extension\BlogExtension:
        arguments: ['@router', '@vich_uploader.templating.helper.uploader_helper']
        tags:
            - { name: twig.extension }

    # Slugify Instance
    CedricZiel\BlogBundle\EventListener\PostSlugListener:
        arguments:
            - '@slugger'
        tags:
            - { name: kernel.event_subscriber }
